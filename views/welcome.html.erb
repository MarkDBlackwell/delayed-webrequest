<div id="post1">
<h2>Welcome, Rails developers, to <%= @site_name %>.</h2>

<p>We help Rails apps to scale up, in the cloud. (Available soon.)</p>

<p>Let's say you have a Rails app of the usual kind (threaded or unthreaded, synchronous, Rails 3 or 2.) Any kind of 
web app will do — even if it's not Rails.</p>

<p>Unfortunately your app slows, maybe to a crawl if external services aren't there right away when you want them.</p>

<p>Because thousands of Rails instances, even hundreds, can't all be up and running at once, you know. Rails is too big 
and multifunctional for that, right?</p>

<p>Delays also come from short-polling
 — the browser asking too early, or too late: filling up the server — you know you can't win that way.</p>

<p>It really makes your user experience ... not what it should be. And that bothers you. So you're interested in node.js 
and async processing. But for a big app ... it's too hard to code that way!</p>

<p>We put the 'snappy' back in your app with PusherApp, Memcache and RabbitMQ.</p>

<p>Tell us with RabbitMQ all the external webservice requests you want and we will perform them with <a 
href="http://rubyeventmachine.com/">EventMachine</a> and Memcache their responses to you immediately, just as soon as 
each becomes available. Directly, we'll prompt your browser (with PusherApp) to make its Ajax request, so you don't have to. (Please see 
further <a 
href="http://markdblackwell.blogspot.com/2012/07/manage-long-running-external-webservice.html">details</a>.)</p>

<p><%= @site_name %>! is easy, and free — for now. Try it! Email markdblackwell01@gmail.com for setup information 
(more here soon).</p>

<p>(Available soon.)</p>

</div>
