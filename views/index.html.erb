<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
Design by Free CSS Templates
http://www.freecsstemplates.org
Released for free under a Creative Commons Attribution 3.0 License

Name       : Resolved
Description: A two-column, fixed-width design with dark color scheme.
Version    : 1.0
Released   : 20120205
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="description" content="" />
<meta name="keywords" content="" />
<title><%= @site_name %></title>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link href="http://fonts.googleapis.com/css?family=Arvo" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="style.css" />
</head>
<body>
<div id="wrapper">
	<div id="header">
		<div id="logo">
			<h1><a href="#"><%= @site_name %></a></h1>
		</div>
		<div id="menu">
			<ul>
				<li class="first current_page_item"><a href="/">Homepage</a></li>
				<li class="last current_page_item"><a href="/login">Login</a></li>
			</ul>
			<br class="clearfix" />
		</div>
	</div>
	<div id="page">
		<div id="content">
			<div id="post1">
				<h2>Welcome, <%= @user_name %>, to <%= @site_name %>.</h2>
<p>
We help Rails apps 
scale up,
in the cloud. 
(Available soon.) 
</p>
<p>
Let's say you have a Rails app of
the usual kind.
(Threaded or unthreaded, synchronous, 
Rails 3 
or 
Rails 2.) Any kind of web app will do —
even 
if it's not 
Rails.
</p>
<p>
Maybe your app 
unfortunately
slows to a crawl, 
if external services 
aren't there
right away,
right when you want to 
access them.
Because you know 
thousands
of Rails instances, 
even hundreds,
can't be up and running
all at once.
Rails is too big 
and multifunctional
for that!
</p>
<p>

Delays come also from 
short-polling in the 
browser —
checking too late, 
checking too early:
loading up the server.
You know 
you can't win
that way!
</p>
<p>
This makes the user experience really ...
not what it should be.
And that bothers you. 
So you got 
interested in 
node.js and asynchronous processing.
But for a big app ...
it's too hard to code 
that way!
</p>
<p>
We can help your app get snappy.
With RabbitMQ, Memcache and PusherApp,
we handle 
all the
external webservice requests
you wish.
We Memcache 
each response
as soon as it comes,
with 
<a href="http://rubyeventmachine.com/">EventMachine</a>.
Then we 
directly
tell your browser 
to try 
its AJAX request again,
so you don't have to.
(For details, see 
<a href="<%= @blog_post_url %>">this</a> 
blog post.)
</p>
<p>
Try 
<%= @site_name %>
— it's free, and easy!
Email 
markdblackwell01 at @gmail.com
for setup information
(more here soon).
</p>
<p>
If 
<%= @site_name %>
becomes 
terribly busy 
and our business booms,
then for some
huge number of 
requests
(maybe for an hour of clock time)
we might charge
a few cents.
</p>
<p>
(Available soon.) 
</p>
			</div>
			<br class="clearfix" />
		</div>
		<div id="sidebar">
			<h3>News</h3>
			<div class="date-list">
				<ul class="list date-list">
					<li class="first last"><span class="date">July 9, 2012</span> <a href="#">Welcome</a></li>
				</ul>
			</div>
		</div>
		<br class="clearfix" />
	</div>
</div>
<div id="footer">
Copyright (c) <%= @copyright_year %> <%= @owner_name %>, 
All rights reserved. 
'resolved' template design by <a href="http://www.freecsstemplates.org/">FCT</a>.
</div>
</body>
</html>
